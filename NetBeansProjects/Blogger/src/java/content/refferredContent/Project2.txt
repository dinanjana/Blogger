
The project is intended to be designed and implemented based on the content covered in class under
dynamic web content generation, web frameworks.
1. Problem description
Develop a blog system, where multiple registered users can contribute to the content and anyone
viewing the content is allowed to comment on posts which can be viewed by others, once
approved by the administrator.
1.1. Functions of the system
1.1.1 The administrator registers users (handle authentication)
1.1.2 The front page consists of an index page to list the titles of 10 most recent posts with
links to view full posts from there.
1.1.3 Registered users should be able to login to the system and add new posts and edit posts
using the url www.exampleblog.com/new_post.
1.1.4 A new post consists of defining the title and adding the post content as plain text. A
unique id will be assigned to each post and the corresponding URL will be decided based
on the unique ID (define structure.)
1.1.5 Anyone viewing the posts should be able to add a comment. Comments will be
displayed once approved by any user with a login.
1.2. Features of the system (not mandatory to implement)
The implementation of the features will provide you bonus marks.
1.2.1 The blog shall have a page to show site statistics. This page will show the number of hits on
each post.
2. Design considerations
2.1. The system shall not use any DBMS (Database Management System). The posts can
reside in a folder (eg: posts) in the server where the application is deployed.
2.2. The declarative security supported by Apache Tomcat shall be used for authentication
and authorization.
2.3. You may use third party libraries. But make sure, you note and justify your selection, in
the report you will submit.3. Marking
3.1. Proper authentication and authorization: 20% (Please refer section 1.1)
3.2. Proper workflow in add/edits new posts: 25% (Please refer section 1.1)
3.3. Proper workflow in posting comments: 25% (Please refer section 1.1)
3.4. Overall design/Modular code structure: 10%
3.5. A report (maximum 4 pages), describing the design and implementation. 20%
3.6. Bonus marks will be given, if features are implemented. (Please refer section 1.2)
3.7. Late penalties will apply as per course and department policy. Plagarized code will make
your mark zero.
3.8. You are not expected to have a quite fancy UI, hence do not spend a lot of time on styling.
4. Submission
Submit a war (web archive) file consisting all the components of your web application to deploy and the
report.